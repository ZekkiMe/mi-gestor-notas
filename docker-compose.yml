version: '3.8'

services:
  nginx:
    image: nginx:latest # Usaremos la imagen oficial de Nginx
    ports:
      - "8080:80" # Mapea el puerto 80 del host al puerto 80 del contenedor Nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf # Copia tu archivo de configuración de Nginx
      - ./php/src:/var/www/html # Monta el código PHP para que Nginx lo sirva
    depends_on:
      - php # Nginx depende de que PHP esté corriendo
    networks:
      - app-network

  php:
    build:
      context: ./php
      dockerfile: Dockerfile # Usa el Dockerfile que creaste para PHP
    volumes:
      - ./php/src:/var/www/html # Monta el código PHP para que PHP-FPM lo procese
    networks:
      - app-network

  mysql:
    image: mysql:8.0 # Usamos una imagen oficial de MySQL
    environment:
      MYSQL_ROOT_PASSWORD: root_password # Contraseña de root (solo para desarrollo)
      MYSQL_DATABASE: notes_db          # Nombre de la base de datos
      MYSQL_USER: user                  # Usuario para la base de datos
      MYSQL_PASSWORD: password          # Contraseña para el usuario
    volumes:
      - db_data:/var/lib/mysql # Volumen para persistencia de datos de MySQL
    networks:
      - app-network

volumes:
  db_data: # Define el volumen de Docker para la persistencia de datos de MySQL

networks:
  app-network:
    driver: bridge # Define una red personalizada de tipo bridge